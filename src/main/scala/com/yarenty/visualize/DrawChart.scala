package com.yarenty.visualize


import scalax.chart.api._

/**
 * @author yarenty
 */
object DrawChart {


  def main(args: Array[String]): Unit = {

    val data = for (i <- 1 to 5) yield (i, i)

    val tstinitial = List((0, 0.5), (1, 0.66), (5, 0.83), (8, 0.34), (10, 0.22))
    val tstnormalized = List((0, 0.5), (1, 0.66), (2, 0.0), (3, 0.0), (4, 0.0), (5, 0.83), (6, 0.0), (7, 0.0), (8, 0.34), (9, 0.0), (10, 0.22))
    val tstnormalized2 = List((0, 0.5266667), (1, 0.52343756), (2, 0.10957032), (3, 0.0), (4, 0.13833335), (5, 0.5538737), (6, 0.13779297), (7, 0.056666672), (8, 0.22688802), (9, 0.09311199), (10, 0.18347657))
    val tstinterpolated = List((0, 0.5), (1, 0.52), (2, 0.54), (3, 0.56), (4, 0.58000004), (5, 0.6), (6, 0.62), (7, 0.64000005), (8, 0.66), (9, 0.57750005), (10, 0.495), (11, 0.41250002), (12, 0.33), (13, 0.2475), (14, 0.165), (15, 0.0825), (16, 0.0), (17, 0.0), (18, 0.0), (19, 0.0), (20, 0.0), (21, 0.0), (22, 0.0), (23, 0.0), (24, 0.0), (25, 0.0), (26, 0.0), (27, 0.0), (28, 0.0), (29, 0.0), (30, 0.0), (31, 0.0), (32, 0.0), (33, 0.10375), (34, 0.2075), (35, 0.31125), (36, 0.415), (37, 0.51875), (38, 0.6225), (39, 0.72625), (40, 0.83), (41, 0.72625), (42, 0.6225), (43, 0.51875), (44, 0.415), (45, 0.31125), (46, 0.2075), (47, 0.10375), (48, 0.0), (49, 0.0), (50, 0.0), (51, 0.0), (52, 0.0), (53, 0.0), (54, 0.0), (55, 0.0), (56, 0.0), (57, 0.0425), (58, 0.085), (59, 0.1275), (60, 0.17), (61, 0.2125), (62, 0.255), (63, 0.2975), (64, 0.34), (65, 0.2975), (66, 0.255), (67, 0.2125), (68, 0.17), (69, 0.1275), (70, 0.085), (71, 0.0425), (72, 0.0), (73, 0.0275), (74, 0.055), (75, 0.082499996), (76, 0.11), (77, 0.1375), (78, 0.16499999), (79, 0.1925), (80, 0.22), (81, 0.1925), (82, 0.16499999), (83, 0.1375), (84, 0.11), (85, 0.082499996), (86, 0.055), (87, 0.0275));
    val tstinterpolated2 = List((0, 0.50333333), (1, 0.52001303), (2, 0.5400131), (3, 0.56001306), (4, 0.5800131), (5, 0.6000131), (6, 0.62001306), (7, 0.6400131), (8, 0.64292973), (9, 0.5774464), (10, 0.49494633), (11, 0.41244632), (12, 0.32994634), (13, 0.24744631), (14, 0.1649463), (15, 0.0824463), (16, 0.01369629), (17, 0.0), (18, 0.0), (19, 0.0), (20, 0.0), (21, 0.0), (22, 0.0), (23, 0.0), (24, 0.0), (25, 0.0), (26, 0.0), (27, 0.0), (28, 0.0), (29, 0.0), (30, 0.0), (31, 0.0), (32, 0.017291669), (33, 0.10381755), (34, 0.20756756), (35, 0.31131756), (36, 0.41506755), (37, 0.5188176), (38, 0.6225676), (39, 0.7263176), (40, 0.79548424), (41, 0.72618246), (42, 0.6224325), (43, 0.5186825), (44, 0.4149325), (45, 0.31118247), (46, 0.20743246), (47, 0.10368246), (48, 0.017224122), (49, 0.0), (50, 0.0), (51, 0.0), (52, 0.0), (53, 0.0), (54, 0.0), (55, 0.0), (56, 0.007083334), (57, 0.042527672), (58, 0.08502768), (59, 0.12752767), (60, 0.17002769), (61, 0.21252769), (62, 0.25502768), (63, 0.2975277), (64, 0.32586104), (65, 0.29747236), (66, 0.25497234), (67, 0.21247235), (68, 0.16997235), (69, 0.12747234), (70, 0.08497234), (71, 0.042472336), (72, 0.011638999), (73, 0.027517905), (74, 0.055017907), (75, 0.08251791), (76, 0.11001791), (77, 0.13751791), (78, 0.1650179), (79, 0.1925179), (80, 0.21085125), (81, 0.1924821), (82, 0.1649821), (83, 0.1374821), (84, 0.1099821), (85, 0.0824821), (86, 0.0549821), (87, 0.032065433))


    val normalized: List[(Long, Float)] = List((61346678400000L, 0.002258253f), (61346679000000L, 0.051537354f), (61346679600000L, 0.06225998f), (61346680200000L, 0.087897405f), (61346680800000L, 0.09332958f), (61346681400000L, 0.026000166f), (61346682000000L, 0.057960145f), (61346682600000L, 0.037402123f), (61346683200000L, 0.039585806f), (61346683800000L, 0.024012387f), (61346684400000L, 0.052244972f), (61346685000000L, 0.06288572f), (61346685600000L, 0.029541278f), (61346686200000L, 0.07944607f), (61346686800000L, 0.0036818266f), (61346687400000L, 0.056298774f), (61346688000000L, 0.011515116f), (61346688600000L, 0.033199143f), (61346689200000L, 0.0687324f), (61346689800000L, 0.013000441f), (61346690400000L, 0.066792116f), (61346691000000L, 0.024089783f), (61346691600000L, 0.03067249f), (61346692200000L, 0.09013922f), (61346692800000L, 0.08450455f), (61346693400000L, 0.07822883f), (61346694000000L, 0.04945282f), (61346694600000L, 0.05575459f), (61346695200000L, 0.05383598f), (61346695800000L, 0.0912417f), (61346696400000L, 0.0586343f), (61346697000000L, 0.07873601f), (61346697600000L, 0.06897886f), (61346698200000L, 0.06709801f), (61346698800000L, 0.08598317f), (61346699400000L, 0.025259072f), (61346700000000L, 0.09696924f), (61346700600000L, 0.04076735f), (61346701200000L, 0.025648456f), (61346701800000L, 0.048643567f), (61346702400000L, 0.071763426f), (61346703000000L, 0.04181639f), (61346703600000L, 0.07966383f), (61346704200000L, 0.0348879f), (61346704800000L, 0.047468584f), (61346705400000L, 0.057572193f), (61346706000000L, 0.028978813f), (61346706600000L, 0.088887386f), (61346707200000L, 0.10630736f), (61346707800000L, 0.19058672f), (61346708400000L, 0.10505186f), (61346709000000L, 0.1803087f), (61346709600000L, 0.17356509f), (61346710200000L, 0.12164953f), (61346710800000L, 0.1545168f), (61346711400000L, 0.1723519f), (61346712000000L, 0.1323784f), (61346712600000L, 0.14012265f), (61346713200000L, 0.11541098f), (61346713800000L, 0.11057933f), (61346714400000L, 0.25977954f), (61346715000000L, 0.27433857f), (61346715600000L, 0.22433878f), (61346716200000L, 0.27733427f), (61346716800000L, 0.2649785f), (61346717400000L, 0.29044932f), (61346718000000L, 0.2217108f), (61346718600000L, 0.21503095f), (61346719200000L, 0.20857349f), (61346719800000L, 0.25549057f), (61346720400000L, 0.21538158f), (61346721000000L, 0.2791039f), (61346721600000L, 0.11342099f), (61346722200000L, 0.114393674f), (61346722800000L, 0.1517057f), (61346723400000L, 0.109302506f), (61346724000000L, 0.15452398f), (61346724600000L, 0.17891677f), (61346725200000L, 0.15390237f), (61346725800000L, 0.16226369f), (61346726400000L, 0.18582584f), (61346727000000L, 0.19446123f), (61346727600000L, 0.14888668f), (61346728200000L, 0.15516073f), (61346728800000L, 0.33960912f), (61346729400000L, 0.3467924f), (61346730000000L, 0.3701744f), (61346730600000L, 0.3512921f), (61346731200000L, 0.32173184f), (61346731800000L, 0.3109078f), (61346732400000L, 0.30244675f), (61346733000000L, 0.31563506f), (61346733600000L, 0.3396952f), (61346734200000L, 0.37761712f), (61346734800000L, 0.30577967f), (61346735400000L, 0.36885118f), (61346736000000L, 0.39609003f), (61346736600000L, 0.32655406f), (61346737200000L, 0.30887327f), (61346737800000L, 0.32951546f), (61346738400000L, 0.37694573f), (61346739000000L, 0.3368829f), (61346739600000L, 0.30189553f), (61346740200000L, 0.3092784f), (61346740800000L, 0.37159514f), (61346741400000L, 0.33625352f), (61346742000000L, 0.35337833f), (61346742600000L, 0.3874064f), (61346743200000L, 0.3006255f), (61346743800000L, 0.31477585f), (61346744400000L, 0.3611317f), (61346745000000L, 0.3581369f), (61346745600000L, 0.3631268f), (61346746200000L, 0.36191323f), (61346746800000L, 0.165101f), (61346747400000L, 0.105299756f), (61346748000000L, 0.16965264f), (61346748600000L, 0.19104016f), (61346749200000L, 0.16775967f), (61346749800000L, 0.19778064f), (61346750400000L, 0.118015416f), (61346751000000L, 0.17757905f), (61346751600000L, 0.14386266f), (61346752200000L, 0.12102277f), (61346752800000L, 0.124255516f), (61346753400000L, 0.16355674f), (61346754000000L, 0.17158675f), (61346754600000L, 0.11359844f), (61346755200000L, 0.108912215f), (61346755800000L, 0.1433367f), (61346756400000L, 0.17822936f), (61346757000000L, 0.18393895f), (61346757600000L, 0.091219306f), (61346758200000L, 0.09424127f), (61346758800000L, 0.08926175f), (61346759400000L, 0.055932365f), (61346760000000L, 0.08223617f), (61346760600000L, 0.011642009f), (61346761200000L, 0.07473322f), (61346761800000L, 0.06892198f), (61346762400000L, 0.027462244f), (61346763000000L, 0.043541294f), (61346763600000L, 0.053459723f), (61346764200000L, 0.018623311f))
    val interpolated: List[(Long, Float)] = List((61346678400000L, 0.010471438f), (61346679000000L, 0.045143362f), (61346679600000L, 0.064752765f), (61346680200000L, 0.08454656f), (61346680800000L, 0.08120619f), (61346681400000L, 0.042504568f), (61346682000000L, 0.049227953f), (61346682600000L, 0.041179027f), (61346683200000L, 0.036627714f), (61346683800000L, 0.03130325f), (61346684400000L, 0.049331382f), (61346685000000L, 0.055561785f), (61346685600000L, 0.043394446f), (61346686200000L, 0.05853372f), (61346686800000L, 0.025029367f), (61346687400000L, 0.0400996f), (61346688000000L, 0.022563908f), (61346688600000L, 0.035521466f), (61346689200000L, 0.053544667f), (61346689800000L, 0.031218098f), (61346690400000L, 0.0507448f), (61346691000000L, 0.032276157f), (61346691600000L, 0.03949078f), (61346692200000L, 0.07932771f), (61346692800000L, 0.084394045f), (61346693400000L, 0.07447471f), (61346694000000L, 0.055280387f), (61346694600000L, 0.054388635f), (61346695200000L, 0.06038879f), (61346695800000L, 0.079597205f), (61346696400000L, 0.06739793f), (61346697000000L, 0.073772624f), (61346697600000L, 0.07028522f), (61346698200000L, 0.070557795f), (61346698800000L, 0.072727256f), (61346699400000L, 0.04729192f), (61346700000000L, 0.07569725f), (61346700600000L, 0.04757793f), (61346701200000L, 0.03199095f), (61346701800000L, 0.048679333f), (61346702400000L, 0.062934f), (61346703000000L, 0.053095978f), (61346703600000L, 0.06591791f), (61346704200000L, 0.044418186f), (61346704800000L, 0.04706393f), (61346705400000L, 0.051129274f), (61346706000000L, 0.043710526f), (61346706600000L, 0.081844956f), (61346707200000L, 0.117461935f), (61346707800000L, 0.16233923f), (61346708400000L, 0.1317948f), (61346709000000L, 0.16669096f), (61346709600000L, 0.16603206f), (61346710200000L, 0.13574621f), (61346710800000L, 0.15203285f), (61346711400000L, 0.16272874f), (61346712000000L, 0.14030534f), (61346712600000L, 0.13471837f), (61346713200000L, 0.11870824f), (61346713800000L, 0.13624817f), (61346714400000L, 0.23743649f), (61346715000000L, 0.26358828f), (61346715600000L, 0.24147213f), (61346716200000L, 0.26647693f), (61346716800000L, 0.2712749f), (61346717400000L, 0.27476436f), (61346718000000L, 0.23200917f), (61346718600000L, 0.21506368f), (61346719200000L, 0.21746506f), (61346719800000L, 0.24101678f), (61346720400000L, 0.2326607f), (61346721000000L, 0.2409112f), (61346721600000L, 0.14108907f), (61346722200000L, 0.12045088f), (61346722800000L, 0.13844413f), (61346723400000L, 0.12387902f), (61346724000000L, 0.151082f), (61346724600000L, 0.17069812f), (61346725200000L, 0.15944871f), (61346725800000L, 0.16480263f), (61346726400000L, 0.18335341f), (61346727000000L, 0.18543188f), (61346727600000L, 0.15749845f), (61346728200000L, 0.18486054f), (61346728800000L, 0.31018505f), (61346729400000L, 0.34949687f), (61346730000000L, 0.3631456f), (61346730600000L, 0.34950018f), (61346731200000L, 0.32483533f), (61346731800000L, 0.31129462f), (61346732400000L, 0.30604947f), (61346733000000L, 0.31745565f), (61346733600000L, 0.34202117f), (61346734200000L, 0.3593486f), (61346734800000L, 0.32821774f), (61346735400000L, 0.36292017f), (61346736000000L, 0.37997866f), (61346736600000L, 0.33515134f), (61346737200000L, 0.31524894f), (61346737800000L, 0.3339936f), (61346738400000L, 0.36239445f), (61346739000000L, 0.33770275f), (61346739600000L, 0.30893448f), (61346740200000L, 0.31843886f), (61346740800000L, 0.35535935f), (61346741400000L, 0.34497494f), (61346742000000L, 0.35620672f), (61346742600000L, 0.36729375f), (61346743200000L, 0.3173909f), (61346743800000L, 0.32015267f), (61346744400000L, 0.35293677f), (61346745000000L, 0.35946575f), (61346745600000L, 0.36209616f), (61346746200000L, 0.32931268f), (61346746800000L, 0.18780804f), (61346747400000L, 0.12595318f), (61346748000000L, 0.16253366f), (61346748600000L, 0.18360943f), (61346749200000L, 0.1766281f), (61346749800000L, 0.17950249f), (61346750400000L, 0.14118497f), (61346751000000L, 0.16207115f), (61346751600000L, 0.14565347f), (61346752200000L, 0.12535335f), (61346752800000L, 0.13026905f), (61346753400000L, 0.15837047f), (61346754000000L, 0.16058894f), (61346754600000L, 0.12244438f), (61346755200000L, 0.11542763f), (61346755800000L, 0.14343715f), (61346756400000L, 0.17338824f), (61346757000000L, 0.16753781f), (61346757600000L, 0.10711589f), (61346758200000L, 0.092909664f), (61346758800000L, 0.084533535f), (61346759400000L, 0.065849535f), (61346760000000L, 0.06610364f), (61346760600000L, 0.033876948f), (61346761200000L, 0.06329056f), (61346761800000L, 0.062976785f), (61346762400000L, 0.037025053f), (61346763000000L, 0.042524997f), (61346763600000L, 0.05181311f))
    val interpolated2: List[(Long, Float)] = List((61346678400000L, 0.016250094f), (61346679000000L, 0.042655516f), (61346679600000L, 0.06479627f), (61346680200000L, 0.08070376f), (61346680800000L, 0.075310476f), (61346681400000L, 0.050050206f), (61346682000000L, 0.046770282f), (61346682600000L, 0.041756723f), (61346683200000L, 0.036495894f), (61346683800000L, 0.035191882f), (61346684400000L, 0.047376834f), (61346685000000L, 0.05249955f), (61346685600000L, 0.047937628f), (61346686200000L, 0.050436307f), (61346686800000L, 0.03310332f), (61346687400000L, 0.03467509f), (61346688000000L, 0.0276347f), (61346688600000L, 0.036374178f), (61346689200000L, 0.046831444f), (61346689800000L, 0.03817911f), (61346690400000L, 0.04442496f), (61346691000000L, 0.03654468f), (61346691600000L, 0.044932533f), (61346692200000L, 0.073558554f), (61346692800000L, 0.08189974f), (61346693400000L, 0.07292242f), (61346694000000L, 0.05831832f), (61346694600000L, 0.05553671f), (61346695200000L, 0.06259408f), (61346695800000L, 0.0743751f), (61346696400000L, 0.07048566f), (61346697000000L, 0.072133094f), (61346697600000L, 0.07090962f), (61346698200000L, 0.070874125f), (61346698800000L, 0.06812787f), (61346699400000L, 0.056248806f), (61346700000000L, 0.066294976f), (61346700600000L, 0.04964835f), (61346701200000L, 0.03736003f), (61346701800000L, 0.048284583f), (61346702400000L, 0.058927834f), (61346703000000L, 0.056866232f), (61346703600000L, 0.06020598f), (61346704200000L, 0.04842844f), (61346704800000L, 0.047302254f), (61346705400000L, 0.04921791f), (61346706000000L, 0.051297896f), (61346706600000L, 0.08145021f), (61346707200000L, 0.119028516f), (61346707800000L, 0.14979817f), (61346708400000L, 0.14268169f), (61346709000000L, 0.16078784f), (61346709600000L, 0.16109382f), (61346710200000L, 0.14348859f), (61346710800000L, 0.15111166f), (61346711400000L, 0.15721583f), (61346712000000L, 0.14309682f), (61346712600000L, 0.13297755f), (61346713200000L, 0.1242895f), (61346713800000L, 0.15020101f), (61346714400000L, 0.2249963f), (61346715000000L, 0.25556067f), (61346715600000L, 0.24931122f), (61346716200000L, 0.26312542f), (61346716800000L, 0.27105996f), (61346717400000L, 0.2670592f), (61346718000000L, 0.23628297f), (61346718600000L, 0.21827713f), (61346719200000L, 0.22099169f), (61346719800000L, 0.23571415f), (61346720400000L, 0.23542303f), (61346721000000L, 0.22290447f), (61346721600000L, 0.1542214f), (61346722200000L, 0.12687603f), (61346722800000L, 0.13302946f), (61346723400000L, 0.13083088f), (61346724000000L, 0.14983524f), (61346724600000L, 0.16556664f), (61346725200000L, 0.16220862f), (61346725800000L, 0.1670056f), (61346726400000L, 0.1806201f), (61346727000000L, 0.18043126f), (61346727600000L, 0.16669619f), (61346728200000L, 0.20120545f), (61346728800000L, 0.29593122f), (61346729400000L, 0.3452453f), (61346730000000L, 0.35860547f), (61346730600000L, 0.34765473f), (61346731200000L, 0.3266733f), (61346731800000L, 0.3126684f), (61346732400000L, 0.3088213f), (61346733000000L, 0.3196563f), (61346733600000L, 0.34083083f), (61346734200000L, 0.35128352f), (61346734800000L, 0.3391697f), (61346735400000L, 0.36000213f), (61346736000000L, 0.3696755f), (61346736600000L, 0.33927634f), (61346737200000L, 0.32167718f), (61346737800000L, 0.3356152f), (61346738400000L, 0.3535642f), (61346739000000L, 0.33700725f), (61346739600000L, 0.31529453f), (61346740200000L, 0.3230144f), (61346740800000L, 0.34749925f), (61346741400000L, 0.34857088f), (61346742000000L, 0.3561899f), (61346742600000L, 0.357136f), (61346743200000L, 0.32613584f), (61346743800000L, 0.3251582f), (61346744400000L, 0.3485823f), (61346745000000L, 0.35882026f), (61346745600000L, 0.3561956f), (61346746200000L, 0.31117117f), (61346746800000L, 0.20099089f), (61346747400000L, 0.14231881f), (61346748000000L, 0.15997337f), (61346748600000L, 0.17894697f), (61346749200000L, 0.17826618f), (61346749800000L, 0.17263904f), (61346750400000L, 0.15102732f), (61346751000000L, 0.15586744f), (61346751600000L, 0.14499572f), (61346752200000L, 0.12954278f), (61346752800000L, 0.13413654f), (61346753400000L, 0.15407495f), (61346754000000L, 0.15386322f), (61346754600000L, 0.12760752f), (61346755200000L, 0.12126078f), (61346755800000L, 0.14377898f), (61346756400000L, 0.16744083f), (61346757000000L, 0.15843876f), (61346757600000L, 0.114779174f), (61346758200000L, 0.09387211f), (61346758800000L, 0.08281011f), (61346759400000L, 0.068993725f), (61346760000000L, 0.060690343f), (61346760600000L, 0.044129353f), (61346761200000L, 0.058355145f), (61346761800000L, 0.05870359f), (61346762400000L, 0.042250108f), (61346763000000L, 0.04315994f), (61346763600000L, 0.050271142f))
    val interpolated3: List[(Long, Float)] = List((61346678400000L, 0.020651f), (61346679000000L, 0.04196193f), (61346679600000L, 0.063771814f), (61346680200000L, 0.077163994f), (61346680800000L, 0.0719958f), (61346681400000L, 0.053697154f), (61346682000000L, 0.04647921f), (61346682600000L, 0.04171225f), (61346683200000L, 0.03715194f), (61346683800000L, 0.037439197f), (61346684400000L, 0.04620773f), (61346685000000L, 0.050888784f), (61346685600000L, 0.04911143f), (61346686200000L, 0.047132656f), (61346686800000L, 0.03624283f), (61346687400000L, 0.033240758f), (61346688000000L, 0.030260097f), (61346688600000L, 0.03666617f), (61346689200000L, 0.04365332f), (61346689800000L, 0.04065651f), (61346690400000L, 0.042074673f), (61346691000000L, 0.03925091f), (61346691600000L, 0.048311025f), (61346692200000L, 0.07019639f), (61346692800000L, 0.079018764f), (61346693400000L, 0.071978785f), (61346694000000L, 0.06027923f), (61346694600000L, 0.05717473f), (61346695200000L, 0.06338595f), (61346695800000L, 0.07177103f), (61346696400000L, 0.07140595f), (61346697000000L, 0.07165569f), (61346697600000L, 0.07110682f), (61346698200000L, 0.070422314f), (61346698800000L, 0.06660395f), (61346699400000L, 0.05989528f), (61346700000000L, 0.061852723f), (61346700600000L, 0.0503639f), (61346701200000L, 0.041220844f), (61346701800000L, 0.048244815f), (61346702400000L, 0.056817293f), (61346703000000L, 0.05776512f), (61346703600000L, 0.05768861f), (61346704200000L, 0.050196f), (61346704800000L, 0.047808494f), (61346705400000L, 0.04924655f), (61346706000000L, 0.055977974f), (61346706600000L, 0.08270751f), (61346707200000L, 0.11791821f), (61346707800000L, 0.14350386f), (61346708400000L, 0.14688084f), (61346709000000L, 0.15783294f), (61346709600000L, 0.15810882f), (61346710200000L, 0.14768185f), (61346710800000L, 0.15086348f), (61346711400000L, 0.15384929f), (61346712000000L, 0.14375426f), (61346712600000L, 0.1332095f), (61346713200000L, 0.13005044f), (61346713800000L, 0.15836518f), (61346714400000L, 0.21767318f), (61346715000000L, 0.24944495f), (61346715600000L, 0.2526511f), (61346716200000L, 0.2621545f), (61346716800000L, 0.26907593f), (61346717400000L, 0.26259404f), (61346718000000L, 0.23839134f), (61346718600000L, 0.22171882f), (61346719200000L, 0.22299479f), (61346719800000L, 0.23322149f), (61346720400000L, 0.23338495f), (61346721000000L, 0.21353558f), (61346721600000L, 0.16106631f), (61346722200000L, 0.13244137f), (61346722800000L, 0.13164148f), (61346723400000L, 0.1343633f), (61346724000000L, 0.14930212f), (61346724600000L, 0.16239533f), (61346725200000L, 0.16356562f), (61346725800000L, 0.16847833f), (61346726400000L, 0.17832842f), (61346727000000L, 0.17817345f), (61346727600000L, 0.17472798f), (61346728200000L, 0.21126401f), (61346728800000L, 0.28842428f), (61346729400000L, 0.3392851f), (61346730000000L, 0.35456237f), (61346730600000L, 0.34597585f), (61346731200000L, 0.32782242f), (61346731800000L, 0.31435227f), (61346732400000L, 0.31126583f), (61346733000000L, 0.32138664f), (61346733600000L, 0.33905765f), (61346734200000L, 0.34752926f), (61346734800000L, 0.3446529f), (61346735400000L, 0.35815588f), (61346736000000L, 0.36300305f), (61346736600000L, 0.3413899f), (61346737200000L, 0.32692194f), (61346737800000L, 0.33629277f), (61346738400000L, 0.34782493f), (61346739000000L, 0.3361372f), (61346739600000L, 0.32018584f), (61346740200000L, 0.32581362f), (61346740800000L, 0.343613f), (61346741400000L, 0.3496628f), (61346742000000L, 0.35508272f), (61346742600000L, 0.35181227f), (61346743200000L, 0.33111945f), (61346743800000L, 0.32922456f), (61346744400000L, 0.3463999f), (61346745000000L, 0.3566832f), (61346745600000L, 0.3491273f), (61346746200000L, 0.30028257f), (61346746800000L, 0.20950387f), (61346747400000L, 0.15500173f), (61346748000000L, 0.16020471f), (61346748600000L, 0.1756836f), (61346749200000L, 0.17744136f), (61346749800000L, 0.16997129f), (61346750400000L, 0.15542191f), (61346751000000L, 0.15325196f), (61346751600000L, 0.14422512f), (61346752200000L, 0.13287385f), (61346752800000L, 0.13669698f), (61346753400000L, 0.1507296f), (61346754000000L, 0.14952244f), (61346754600000L, 0.1309086f), (61346755200000L, 0.12606747f), (61346755800000L, 0.14398426f), (61346756400000L, 0.16201226f), (61346757000000L, 0.15265666f), (61346757600000L, 0.11854284f), (61346758200000L, 0.09549935f), (61346758800000L, 0.08234385f), (61346759400000L, 0.06990357f), (61346760000000L, 0.059308674f), (61346760600000L, 0.049249705f), (61346761200000L, 0.05605152f), (61346761800000L, 0.055903498f), (61346762400000L, 0.045133285f), (61346763000000L, 0.0441941f), (61346763600000L, 0.049090575f))
    val interpolated4: List[(Long, Float)] = List((61346678400000L, 0.024202824f), (61346679000000L, 0.042058967f), (61346679600000L, 0.062383067f), (61346680200000L, 0.07407933f), (61346680800000L, 0.069804035f), (61346681400000L, 0.055532027f), (61346682000000L, 0.046883013f), (61346682600000L, 0.041743588f), (61346683200000L, 0.0379569f), (61346683800000L, 0.038852934f), (61346684400000L, 0.045532197f), (61346685000000L, 0.04981543f), (61346685600000L, 0.049076706f), (61346686200000L, 0.045646198f), (61346686800000L, 0.037550367f), (61346687400000L, 0.033242375f), (61346688000000L, 0.031822614f), (61346688600000L, 0.03676719f), (61346689200000L, 0.04199388f), (61346689800000L, 0.041390393f), (61346690400000L, 0.04136861f), (61346691000000L, 0.04122972f), (61346691600000L, 0.050454468f), (61346692200000L, 0.06803348f), (61346692800000L, 0.07638078f), (61346693400000L, 0.071197614f), (61346694000000L, 0.061704125f), (61346694600000L, 0.058725335f), (61346695200000L, 0.06375231f), (61346695800000L, 0.07031813f), (61346696400000L, 0.071508184f), (61346697000000L, 0.07152276f), (61346697600000L, 0.07108386f), (61346698200000L, 0.06989957f), (61346698800000L, 0.06611975f), (61346699400000L, 0.06133527f), (61346700000000L, 0.059612956f), (61346700600000L, 0.050747383f), (61346701200000L, 0.0439094f), (61346701800000L, 0.048507474f), (61346702400000L, 0.055552103f), (61346703000000L, 0.05759502f), (61346703600000L, 0.056452546f), (61346704200000L, 0.051041976f), (61346704800000L, 0.04844454f), (61346705400000L, 0.05012972f), (61346706000000L, 0.05931538f), (61346706600000L, 0.084138446f), (61346707200000L, 0.116336964f), (61346707800000L, 0.13981909f), (61346708400000L, 0.14814556f), (61346709000000L, 0.15606071f), (61346709600000L, 0.1563252f), (61346710200000L, 0.14994317f), (61346710800000L, 0.15083294f), (61346711400000L, 0.15167111f), (61346712000000L, 0.14367273f), (61346712600000L, 0.1344336f), (61346713200000L, 0.13529402f), (61346713800000L, 0.16354917f), (61346714400000L, 0.21312243f), (61346715000000L, 0.24470471f), (61346715600000L, 0.25370273f), (61346716200000L, 0.26173037f), (61346716800000L, 0.26684657f), (61346717400000L, 0.25963637f), (61346718000000L, 0.23963062f), (61346718600000L, 0.2246994f), (61346719200000L, 0.22448742f), (61346719800000L, 0.23155096f), (61346720400000L, 0.23004961f), (61346721000000L, 0.20808601f), (61346721600000L, 0.16500622f), (61346722200000L, 0.13706025f), (61346722800000L, 0.13222791f), (61346723400000L, 0.13640124f), (61346724000000L, 0.14900427f), (61346724600000L, 0.1604167f), (61346725200000L, 0.16419013f), (61346725800000L, 0.16930443f), (61346726400000L, 0.17666735f), (61346727000000L, 0.17762494f), (61346727600000L, 0.18138933f), (61346728200000L, 0.21805853f), (61346728800000L, 0.2840913f), (61346729400000L, 0.33338764f), (61346730000000L, 0.35059503f), (61346730600000L, 0.3443758f), (61346731200000L, 0.32859117f), (61346731800000L, 0.31607413f), (61346732400000L, 0.31346506f), (61346733000000L, 0.32265162f), (61346733600000L, 0.33753595f), (61346734200000L, 0.34564346f), (61346734800000L, 0.34738094f), (61346735400000L, 0.35672206f), (61346736000000L, 0.35859618f), (61346736600000L, 0.34256673f), (61346737200000L, 0.33088568f), (61346737800000L, 0.3366591f), (61346738400000L, 0.34396246f), (61346739000000L, 0.33541903f), (61346739600000L, 0.323772f), (61346740200000L, 0.3278459f), (61346740800000L, 0.34166634f), (61346741400000L, 0.34956178f), (61346742000000L, 0.35363787f), (61346742600000L, 0.34890643f), (61346743200000L, 0.33423898f), (61346743800000L, 0.33240172f), (61346744400000L, 0.3452624f), (61346745000000L, 0.35371673f), (61346745600000L, 0.34224093f), (61346746200000L, 0.2932618f), (61346746800000L, 0.21549088f), (61346747400000L, 0.16491711f), (61346748000000L, 0.16192077f), (61346748600000L, 0.17340682f), (61346749200000L, 0.17590454f), (61346749800000L, 0.16878656f), (61346750400000L, 0.1574757f), (61346751000000L, 0.15210775f), (61346751600000L, 0.14383185f), (61346752200000L, 0.13539553f), (61346752800000L, 0.13840106f), (61346753400000L, 0.14819878f), (61346754000000L, 0.14662054f), (61346754600000L, 0.13319194f), (61346755200000L, 0.12985732f), (61346755800000L, 0.14401446f), (61346756400000L, 0.15746006f), (61346757000000L, 0.14852421f), (61346757600000L, 0.120365694f), (61346758200000L, 0.097132355f), (61346758800000L, 0.08245449f), (61346759400000L, 0.070203036f), (61346760000000L, 0.0593911f), (61346760600000L, 0.052053288f), (61346761200000L, 0.054897644f), (61346761800000L, 0.05413304f), (61346762400000L, 0.04676478f), (61346763000000L, 0.0451661f), (61346763600000L, 0.048277687f))


    val chartNormalized = XYLineChart(tstnormalized, "just normalized")
    val chartNormalized2 = XYBarChart(tstnormalized2, "normalized  + interpolated")
    val chartInterpolated = XYLineChart(tstinterpolated, "interpolated")
    val chartInterpolated2 = XYBarChart(tstinterpolated2, "interpolated2")

    val chartLineInitial = XYLineChart(tstinitial, "initial")
    val chartInitial = XYBarChart(tstinitial, "initial")


    val out1 = XYLineChart(normalized, "real::normalized")
    val out2 = XYLineChart(interpolated, "real::interpolated")
    val out3 = XYLineChart(interpolated2, "real::interpolated2")
    val out4 = XYLineChart(interpolated3, "real::interpolated3")
    val out5 = XYLineChart(interpolated4, "real::interpolated4")


    out5.show("Real example: interpoladed4", (1000, 600), true)
    out4.show("Real example: interpoladed3", (1000, 600), true)
    out3.show("Real example: interpoladed2", (1000, 600), true)
    out2.show("Real example: interpoladed", (1000, 600), true)
    out1.show("Real example: normalized", (1000, 600), true)


    chartInterpolated2.show("Interpolation of extended data", (1000, 600), true)
    chartInterpolated.show("Extended data", (1000, 600), true)

    chartNormalized2.show("Simple interpolation", (1000, 600), true)
    chartNormalized.show("Data normalized", (1000, 600), true)

    chartLineInitial.show("Initial data", (1000, 600), true)
    chartInitial.show("Initial data", (1000, 600), true)


  }

}